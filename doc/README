########################
DESCRIZIONE DEL PROGETTO
########################
Si vuole realizzare un database dei soci dell'osservatorio copernico. Pertanto si decide che:
. Ogni persona inserita nel database (sia che abbia o meno la tessera) costituisce un'identità
. Se un'identità ha la tessera (come accade sempre quando viene iscritto) è anche un socio: quindi un socio è anche un'identità mentre un'identità non è detto che sia anche un socio
. il diritto di socio scade dopo un anno solare (31/12) mentre l'essere un'identita' scade dopo 5 anni consecutivi di mancato rinnovo tessera.

Inoltre:
. Si vuole una stampa di tutti i soci nell'anno corrente in un foglio elettronico
. Alla fine di ogni anno solare verrà meno il diritto di socio ma non verrà cancellata la sua anagrafica dal database
. I soci devono poter essere collegati (ad esempio da legami di parentela)

*****
MYSQL
*****
-- Si decide di implementare un database di nome "soci" con le seguenti tabelle:
1. Tabella "anagrafica" con i seguenti campi
	"member_id": discrimina univocamente un'identità
	"cognome"
	"nome"
	"data_nascita"
	"luogo_nascita"
	"sesso"
	"cf"
	"indirizzo"
	"cap"
	"citta"
	"provincia": serve sapere la regione per l'implementazione del calcolo automatico cf
	"stato"
	"telefono"
	"email": utile per eventuali comunicazioni
	"tessera": questo numero varierà da un anno all'altro relativamente al momento del nuovo tesseramento
	"scadenza": avrà valore +5 rispetto l'ultimo anno di tesseramento (es tesseramento 2016 => 2021)
	
2. Tabella "presenze" con i seguenti campi:
	"data"
	"iscrizione"
	"member_id"
	
3. Tabella "collegamenti" con i seguenti campi:
	"tipo": padre, nonna, compagna, ecc
	"member_id_rel"
	"member_id"
	
***************Per il momento non la implemento*********
4. Tabella "eventi" con i seguenti campi:
	"descrizione"
	"quota_integrativa"
	"data": campo di relazione da tabella "presenze"??
********************************************************
	
. Come engine utilizzo quello di default per la versione di MySql che ho installato (5.6.20) ovvero InnoDB
. Creo l'utente copernico con pieni diritti sul database soci
. Creo la procedura "reset_members" che elimina tutti i soci.
	.. mysql>CALL reset_members(); come azione:
    .. Cancella tutti i dati dalla tabella "presenze"
    .. Mette NULL nel campo "tessera" dalla tabella "anagrafica"
	.. Questo file deve essere lanciato assolutamente prima dell'inserimento del primo socio nel nuovo anno
	.. Non è necessario il riavvio del server mysql
        .. Chiudere e riaprire firefox per azzerare i contatori soci
. Creo la procedura "expire_identities" che elimina definitivamente dal database le identità che non diventano più soci per 5 anni consecutivi
	.. mysql>CALL expire_identities(FALSE); mostra quali identità vengono eliminate definitivamente dal database, ma non elimina nulla. 
	.. mysql>CALL expire_identities(TRUE); eliminà tali identità !
	.. Dopo l'eliminazione è necessario riavviare il server mysql
        .. Chiudere e riaprire firefox per azzerare i contatori soci

		
Nella cartella mysql sono presenti questi file:
. init_database.bat: se lanciato inizializza un nuovo database (tabelle e procedure)
. reset_members.proc.bat: aggiorna la procedura "reset_members" in caso dovesse essere modificata
. expire_identities.proc.bat: aggiorna la procedura "expire_identities" in caso dovesse essere modificata
. XXXX-ELENCO_SOCI.csv: se esiste è l'estrazione dei soci per l'anno XXXX


##############################################
INIZIALIZZAZIONE DEL SISTEMA PER UN NUOVO ANNO
##############################################
Prima di cominciare un nuovo anno è necessario effettuare quanto segue:
. Fare un backup del database: si veda la sezione BACKUP/RESTORE
. Esportare in due file csv tutti i soci e tutte le identità tramite il programma stesso
. Lanciare le procedure "reset_members" ed "expire_identities" il cui funzionamento è descritto alla sezione precedente


################
BACKUP / RESTORE
################
Per fare il backup di tutto il database, comprese procedure e trigger, basta portarsi dentro la cartella dei binari mysql e lanciare il programma:
mysqldump.exe -u copernico --routines soci> XXXX_backup.sql (con XXXX che indica l'anno in cui si effettua il backup).
Verrà creato il file XXXX_backup.sql nella stessa directory dei binari mysql
. Spostare il file XXXX_backup.sql nella cartella doc del software dove sono anche presenti i file csv

Per fare il restore di tutto il database, comprese procedure e trigger:
. Assicurarsi che il file di backup (XXXX_backup.sql) sia nella stessa directory dei binari di mysql
. Connettersi a mysql con l'utente che avrà i permessi su quel database: mysql.exe -u copernico
. Nel caso non esistesse, creare il database (senza le tabelle!): create database copernico;
Nel caso non esistesse l'utente copernico occorre consultare la sezione di inizializzazione mysql nel file "Sviluppo web.odt" 
. Fare il logout da mysql, portarsi dentro la cartella dei binari mysql e lanciare il programma:
mysql -u copernico soci < XXXX_backup.sql (con XXXX che indica l'anno in cui si è effettuato il backup).


###################
GESTIONE NEWSLETTER
###################
Il funzionamento della Newsletter è il seguente:
. Per essere iscritti alla newsletter basta inserire un indirizzo email. Viceversa per cancellarsi alla newsletter basterà cancellare l'indirizzo email
. L'invio della email avviene tramite protocollo SMTP autenticato da password con connessione SSL/TSL
. Il corpo della email è una pagina web in html salvata nella cartella html del sito. In essa è contenuta un'immagine con il nome evento.jpg. E' proprio quest'ultima che rappresenta la locandina dell'evento da pubblicizzare viene letta nella cartella doc del sito. Pertanto ad ogni nuovo evento occorre creare un'immagine con il nome evento.jpg e metterla nella cartella doc del sito. A quel punto automaticamente essa viene inserita nel corpo della email
 
Accedendo alla pagina Newsletter il layout si presenta in questo modo:
. Accanto alla scritta ELENCO IDENTITA' ISCRITTE ALLA NEWSLETTER, dentro le parentesi tonde, viene mostrato il numero di identità che sono iscritti alla newsletter
. A fianco sulla destra cliccando sulla busta gialla si invia la newsletter
. Nel campo oggetto dovrà obbligatoriamente essere scritto quello che apparirà come oggetto nella email.
. Nel campo password dovrà obbligatoriamente essere scritta la password per la connessione al server SMTP per l'invio della email. Il lucchetto a lato indica se, al momento in cui si sta digitando la password, quest'ultima appare criptata durante la digitazione(lucchetto chiuso, come di default) oppure la password è visibile(lucchetto aperto). Il lucchetto si apre e si chiude cliccandoci sopra
. Nel campo area di testo è possibile inserire un messaggio personalizzato che apparirà subito prima dell'immagine che pubblicizza l'evento. Potrebbe essere utile nel caso si voglia inviare una nuova email che corregge un errore di un precedente invio
. La tabella mostra le identità a cui sarà inviata la email. Tramite delle caselle di check si possono escludere o includere solo alcune identità


####
TODO
####
. Nella parte di inserimento nuovo socio
    .. controllare che abbia l'età maggiore o uguale ad 8 anni
. Log errori
. Warning nelle query